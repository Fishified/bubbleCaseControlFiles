/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  5.x                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      snappyHexMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

castellatedMesh true;
snap            true;
addLayers       false;

geometry
{
    diffuser_inside.stl
    {
      type        triSurfaceMesh;
	  name        wall_diffuser;
    }

    diffuser_outsides.stl
    {
      type        triSurfaceMesh;
	  name        wall_diffuser;
    }
    
    interior
    {
      type searchableBox;
      min ( 0.000 0.005 0.005); 
      max ( 0.395 0.2 0.305 );
    }
};

castellatedMeshControls
{
    maxLocalCells 1000000;
    maxGlobalCells 40000000;
    minRefinementCells 0;
    maxLoadUnbalance 0.10;
    nCellsBetweenLevels 2;

    features 
    (
	  { 
          file "diffuser_inside.eMesh"; // file containing edge mesh 
          level 1;               // level of refinement 
      }

    { 
          file "diffuser_outsides.eMesh"; // file containing edge mesh 
          level 1;               // level of refinement 
      }
	);

    refinementSurfaces
    {
        wall_diffuser
        {
	     level (1 1);      
		 		patchInfo
            {
                type wall; //or you could also use 'patch' to define a boundary
            }
        }
    }

    resolveFeatureAngle 10;


    refinementRegions
    {

       interior
       {
         mode inside;
         levels ((1 1));
       }
	   
    }

    locationInMesh (0.2 0.1025 0.1025);
    allowFreeStandingZoneFaces true;
}


snapControls
{
    nSmoothPatch 3;
    tolerance 4.0;
    nSolveIter 30;
    nRelaxIter 5;
    nFeatureSnapIter 10;
}


addLayersControls
{
    relativeSizes false;
    layers
    {
    }
    expansionRatio 1.0;
    finalLayerThickness 0.007;
    minThickness 0.007;
    nGrow 0;
    featureAngle 180;
    nRelaxIter 5;
    nSmoothSurfaceNormals 1;
    nSmoothNormals 3;
    nSmoothThickness 10;
    maxFaceThicknessRatio 0.5;
    maxThicknessToMedialRatio 0.3;
    minMedianAxisAngle 90;
    nBufferCellsNoExtrude 0;
    nLayerIter 50;
}


meshQualityControls
{

	
    maxNonOrtho 65;
    maxBoundarySkewness 20;
    maxInternalSkewness 4;
    maxConcave 80;
    minVol 1e-13;
    minTetQuality 1e-30;
    minArea -1;
    minTwist 0.05;
    minDeterminant 0.001;
    minFaceWeight 0.05;
    minVolRatio 0.01;
    minTriangleTwist -1;
    nSmoothScale 4;
    errorReduction 0.75;
}

writeFlags
(
    scalarLevels 
);

mergeTolerance 1e-6;


// ************************************************************************* //